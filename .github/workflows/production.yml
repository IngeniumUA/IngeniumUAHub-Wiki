on:
  push:
    branches: [ custom-wiki-js ]

env:
  BASE_DEV_VERSION: 2.5.307

jobs:
  build:
    runs-on: ubuntu-latest
    environment: Production
    permissions:
      contents: read
      packages: write
    name: Build container
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Disable DEV Flag + Set Version
        run: |
          sudo apt-get install jq -y
          mv package.json pkg-temp.json
          jq --arg vs "$REL_VERSION_STRICT" -r '. + {dev:false, version:$vs}' pkg-temp.json > package.json
          rm pkg-temp.json
          cat package.json

      - name: Set lowercase owner name
        run: |
          echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
        env:
          OWNER: '${{ github.repository_owner }}'

      - name: Set image tag
        run: echo "IMAGE_TAG=ghcr.io/ingeniumua/ingeniumuahub-wiki:${{ github.sha }}" >> $GITHUB_ENV

      - name: Login to Github Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ env.OWNER_LC }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: dev/build/Dockerfile
          push: true
          no-cache: true
          tags: |
            ${{ env.IMAGE_TAG }}
            ghcr.io/ingeniumua/ingeniumuahub-wiki:latest

      - name: Deploy Adminer temporarily
        if: github.event_name == 'push' && github.ref == 'refs/heads/custom-wiki-js' # Optional: restrict to specific branch
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az containerapp update \
              --name ${{ vars.AZURE_CONTAINER_APP_NAME }} \
              --resource-group ${{ vars.AZURE_RESOURCE_GROUP }} \
              --yaml /dev/stdin <<EOF
            configuration:
              ingress:
                external: true
                targetPort: 3000
                traffic:
                  - latestRevision: true
                    weight: 100
              dapr: null
            template:
              containers:
                - name: wiki-app
                  image: ${{ env.IMAGE_TAG }}
                - name: adminer-debug  # Temporary Adminer sidecar
                  image: adminer:latest
                  env:
                    - name: ADMINER_DESIGN
                      value: "pgsql"  # Force PostgreSQL mode
              revisionSuffix: -with-adminer  # Easily identify debug deployment
            EOF
            echo "Adminer deployed temporarily at: https://your-container-app-url--with-adminer--unique-id.example.com"


      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Build and deploy Container App
        uses: azure/container-apps-deploy-action@v1
        with:
          containerAppName: ${{ vars.AZURE_CONTAINER_APP_NAME }}
          resourceGroup: ${{ vars.AZURE_RESOURCE_GROUP }}
          containerAppEnvironment: ${{ vars.AZURE_CONTAINER_APP_ENVIRONMENT }}
          imageToDeploy: ${{ env.IMAGE_TAG }}
